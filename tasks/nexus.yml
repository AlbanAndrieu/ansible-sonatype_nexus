---

- name: nexus | Fail if java is not installed
  command: which java
  changed_when: 0
  failed_when: java_path.rc != 0
  register: java_path

- name: nexus | Create nexus user
  user: 
     name="{{ nexus_user }}"
     home="{{ nexus_home }}"
     shell="/bin/false"
     append="true"
     comment="Nexsus user"

- name: nexus | Create temporary directory
  file:
    path="{{ nexus_dir_tmp }}"
    state=directory
  
- name: nexus | Download nexus archive
  get_url: 
     url="{{ nexus_download_URL }}"
     dest="{{ nexus_dir_tmp }}/{{ nexus_archive }}"
  register: nexus_download

- name: nexus | Resolve nexus_dir name from tar
  shell: 
    tar tf {{nexus_dir_tmp}}/{{nexus_archive}}  | head -1
  changed_when: False   
  register: tar_dir_name
  
- name: nexus | Unarchive nexus 
  unarchive: 
     copy=no
     src="{{ nexus_dir_tmp }}/{{ nexus_archive }}"
     dest="{{ nexus_dir_base }}/"
     creates="{{ nexus_dir_base }}/{{ tar_dir_name.stdout }}/bin"
  sudo_user: "{{ nexus_user }}"
  when: nexus_download | changed
  register: nexus_unarchive

- name: nexus | Change archive nexus ownership
  file:
    path="{{ nexus_dir_base }}/{{ tar_dir_name.stdout }}"
    owner="{{ nexus_user }}"
    group="{{ nexus_group }}"
    state=directory
    recurse=yes
  when: nexus_download |changed
  
- name: nexus | Change sonatype-work nexus ownership (and create)
  file:
    path={{nexus_dir_base}}/sonatype-work/
    owner={{nexus_user}}
    group={{nexus_group}}
    state=directory
    recurse=yes
  when: nexus_download.changed
  
- name: nexus | Stat {{nexus_dir_base}}/{{tar_dir_name.stdout}}
  stat:
    path="{{nexus_dir_base}}/{{tar_dir_name.stdout}}"
  register: nexus_archive_extracted_present
  
- debug: msg="nexus | Path exists and is a directory"
  when: nexus_archive_extracted_present.stat.isdir is defined and nexus_archive_extracted_present.stat.isdir == true
  
- fail: msg="nexus | Whoops! file ownership has changed"
  when: nexus_archive_extracted_present.stat.pw_name != '{{nexus_user}}'
      
- name: nexus | update sym link nexus 
  file: 
     src="{{ nexus_dir_base }}/{{ tar_dir_name.stdout }}"
     dest="{{ nexus_dir_base }}/{{ nexus_service_name }}"
     owner="{{ nexus_user }}"
     group="{{ nexus_group }}"
     state=link
  notify: restart nexus

- name: nexus | Install boot script
  template:
    src=nexus_init.d.j2 
    dest="/etc/init.d/{{ nexus_service_name }}"
    owner=root 
    group=root 
    mode=0755
  notify: restart nexus

  
#- name: nexus | Deploy nexus.properties
#  template:
#    src=nexus.properties.j2
#    dest="{{nexus_dir_base}}/{{tar_dir_name.stdout}}/conf/nexus.properties"
#    owner={{nexus_user}}
#    group={{nexus_user}}
#    mode=0644
#  notify: restart nexus

- name: nexus | Start nexus to create sonatype-work
  service:
     name="{{ nexus_service_name }}"
     state=restarted
  when: nexus_unarchive | changed

- name: nexus | Wait for nexus to start listening on tcp
  wait_for:
     port="{{ jetty_port }}"
     timeout=120
     state=started
  when: nexus_unarchive | changed  

- name: nexus | Wait for nexus to create sonatype-work
  wait_for:
     path="{{ nexus_dir_sonatype_work }}/nexus/conf/nexus.xml"
  when: nexus_unarchive | changed  

- name: nexus | Stop nexus
  service:
     name="{{nexus_service_name}}"
     state=stopped
  when: nexus_unarchive | changed  

    #- name: nexus | Deploy index.html
    #  template:
    #     src=index.html.j2
    #     dest="{{nexus_dir_sonatype_work}}/index.html"
    #     owner="{{nexus_user}}"
    #     group="{{nexus_group}}"
    #     mode=0644
  
- name: Cleanup temporary directory
  file: name={{ tempdir.stdout }} state=absent
